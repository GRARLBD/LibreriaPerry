/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.libreria.gral.system.ui;

import com.mycompany.libreria.gral.system.model.Inventario;
import com.mycompany.libreria.gral.system.model.Oferta;
import com.sun.glass.events.KeyEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import utiles.Clave;
import utiles.Mensaje;
import utiles.Utiles;

/**
 *
 * @author KEVIN
 */
public class FOfertas extends javax.swing.JFrame {
    
    private final int COL_CODIGO = 0;
    private Inventario inv;
    private FFacturarInventario form;
    
    public FOfertas(FFacturarInventario form, Inventario inv) {
        initComponents();
        this.form = form;
        this.inv = inv;
        limpiarFormulario();
        iniciarFormulario();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaOfertas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Ofertas");
        setResizable(false);

        tablaOfertas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tablaOfertas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Descripción", "Unid. ofert.", "Precio unit."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaOfertas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaOfertas.setRequestFocusEnabled(false);
        tablaOfertas.setRowHeight(32);
        tablaOfertas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaOfertas.getTableHeader().setReorderingAllowed(false);
        tablaOfertas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaOfertasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaOfertas);
        if (tablaOfertas.getColumnModel().getColumnCount() > 0) {
            tablaOfertas.getColumnModel().getColumn(0).setPreferredWidth(250);
            tablaOfertas.getColumnModel().getColumn(1).setPreferredWidth(400);
            tablaOfertas.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelarKeyPressed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(550, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:

        Clave result = Clave.RESULT_OK;
        
        try {
            result = procesarDatos0();
        } catch (Exception e) {
            e.printStackTrace();
            result = Clave.RESULT_ERROR;
        }
        
        switch (result) {
            case RESULT_CAMPO_BLANCO: {
                Mensaje.mostrarMensajeSeleccion(rootPane);
                Utiles.seleccionarFila0(tablaOfertas);
                break;
            }
            case RESULT_ERROR: {
                Mensaje.mostrarMensaje5(rootPane);
                break;
            }
            case RESULT_OK: {
                dispose();
                break;
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        
        if (key == java.awt.event.KeyEvent.VK_ENTER) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelarKeyPressed

    private void tablaOfertasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaOfertasKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        
        if (key == KeyEvent.VK_ENTER) {
            btnGuardarActionPerformed(null);
        }
        
        if (key == KeyEvent.VK_TAB) {
            btnCancelar.requestFocus();
        }
        
        if (key == KeyEvent.VK_ESCAPE) {
            Utiles.salir(this);
        }
    }//GEN-LAST:event_tablaOfertasKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaOfertas;
    // End of variables declaration//GEN-END:variables

    //**********************    Acciones ************************
    private Clave procesarDatos0() {
        Clave result = Clave.RESULT_OK;
        
        String codigo = Utiles.obtenerValor(tablaOfertas, COL_CODIGO);
        
        if (codigo == null || codigo.isEmpty()) {
            return Clave.RESULT_CAMPO_BLANCO;
        } else {
            if (consultar(inv, codigo)) {
                if (isOferta(codigo))
                {
                    form.iniciarProc10(inv, obtenerOferta(codigo), Clave.NUEVA_SALIDA_OFERTA);
                } else
                {
                    form.iniciarProc10(inv, null, Clave.NUEVA_SALIDA_INVENTARIO);
                }                
            }
        }
        
        return result;
    }
    
    private boolean consultar(Inventario inv, String codigo) {
        boolean band;
        
        band = false;
        
        if (inv.getProducto().getCodigo().equals(codigo)) {
            band = true;
        } else {
            for (Oferta of : inv.getlOferta()) {
                if (of.getCodigo().equals(codigo)) {
                    band = true;
                    break;
                }
            }
        }        
        
        return band;
    }

    private boolean isOferta(String codigo)
    {
        boolean band = false;

        for (Oferta of : inv.getlOferta()) {
            if (of.getCodigo().equals(codigo)) {
                band = true;
                break;
            }
        }
        return band;
    }
    
    private Oferta obtenerOferta(String codigo)
    {
        Oferta oferta = null;

        for (Oferta of : inv.getlOferta()) {
            if (of.getCodigo().equals(codigo)) {
                oferta = of;
                break;
            }
        }
        return oferta;
    }
    
    //*************************** Formulario *********************
    private void iniciarFormulario() {
        mostrarListaEnTabla(tablaOfertas, inv);
        Utiles.seleccionarFila0(tablaOfertas);
    }

    /**
     * Carga la nueva lista en tabla.
     *
     * @param tabla
     * @param l
     */
    private void mostrarListaEnTabla(JTable tabla, Inventario inv) {
        if (inv == null) {
            // Hacer nada.
        } else {
            int index = -1;
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            
            index++;
            String p0 = inv.getProducto().getCodigo();
            String p1 = inv.getProducto().getDescripcion();
            String p2 = Utiles.formatearM2(inv.getUnidOf());
            String p3 = "$ " + Utiles.formatear(inv.getpVenta());
            String[] datos = {p0, p1, p2, p3};
            
            model.insertRow(index, datos);
            
            for (Oferta of : inv.getlOferta()) {
                index++;
                p0 = of.getCodigo();
                p1 = of.getDescripcion();
                p2 = Utiles.formatearM2(of.getUnidOfert());
                p3 = "$ " + Utiles.formatear(of.getPrecioVenta());
                String[] datos2 = {p0, p1, p2, p3};
                
                model.insertRow(index, datos2);
            }
        }
    }
    
    private void limpiarTabla(JTable tabla) {
        Utiles.limpiarTabla(tabla);
    }
    
    private void limpiarFormulario() {
        limpiarTabla(tablaOfertas);
    }
}
